{
  "_args": [
    [
      {
        "raw": "billboard-top-100",
        "scope": null,
        "escapedName": "billboard-top-100",
        "name": "billboard-top-100",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "E:\\Documenten\\Create\\DataVis\\NodeBeatPort"
    ]
  ],
  "_from": "billboard-top-100@latest",
  "_id": "billboard-top-100@2.0.7",
  "_inCache": true,
  "_location": "/billboard-top-100",
  "_nodeVersion": "6.9.2",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/billboard-top-100-2.0.7.tgz_1491484777658_0.42011718498542905"
  },
  "_npmUser": {
    "name": "darthbatman",
    "email": "masandrishi@gmail.com"
  },
  "_npmVersion": "3.10.9",
  "_phantomChildren": {},
  "_requested": {
    "raw": "billboard-top-100",
    "scope": null,
    "escapedName": "billboard-top-100",
    "name": "billboard-top-100",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/billboard-top-100/-/billboard-top-100-2.0.7.tgz",
  "_shasum": "f61bd16a1d062c757f6478b8fd90240a5a5f61f0",
  "_shrinkwrap": null,
  "_spec": "billboard-top-100",
  "_where": "E:\\Documenten\\Create\\DataVis\\NodeBeatPort",
  "author": {
    "name": "Rishi Masand",
    "email": "darthanakin44@gmail.com",
    "url": "https://github.com/darthbatman"
  },
  "bugs": {
    "url": "https://github.com/darthbatman/billboard-top-100/issues"
  },
  "dependencies": {
    "cheerio": "^0.20.0",
    "request": "^2.72.0"
  },
  "description": "Gets the top songs, albums, and artists from Billboard's charts",
  "devDependencies": {
    "jshint": "^2.9.4"
  },
  "directories": {},
  "dist": {
    "shasum": "f61bd16a1d062c757f6478b8fd90240a5a5f61f0",
    "tarball": "https://registry.npmjs.org/billboard-top-100/-/billboard-top-100-2.0.7.tgz"
  },
  "gitHead": "57bdd4a676e061a946ae109293d560401a947cc5",
  "homepage": "https://github.com/darthbatman/billboard-top-100#readme",
  "keywords": [
    "billboard",
    "api",
    "charts",
    "top",
    "100",
    "songs",
    "music"
  ],
  "license": "MIT",
  "main": "billboard-top-100.js",
  "maintainers": [
    {
      "name": "darthbatman",
      "email": "darthanakin44@gmail.com"
    }
  ],
  "name": "billboard-top-100",
  "optionalDependencies": {},
  "readme": "ï»¿# billboard-top-100\r\nNode.js API to retrieve top songs, albums, and artists from Billboard's charts\r\n\r\n[![https://nodei.co/npm/billboard-top-100.png?downloads=true&downloadRank=true&stars=true](https://nodei.co/npm/billboard-top-100.png?downloads=true&downloadRank=true)](https://www.npmjs.com/package/billboard-top-100)\r\n\r\n[![Build Status](https://travis-ci.org/darthbatman/billboard-top-100.svg?branch=master)](https://travis-ci.org/darthbatman/billboard-top-100)\r\n[![contributions welcome](https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat)](https://github.com/darthbatman/billboard-top-100)\r\n\r\n\r\n# install\r\n\r\n```\r\nnpm install billboard-top-100\r\n```\r\n\r\n# example\r\n\r\n```js\r\nvar billboard = require(\"billboard-top-100\").getChart;\r\n\r\n// date defaults to saturday of this week\r\n\r\nbillboard('hot-100', function(songs, err){\r\n\tif (err) console.log(err);\r\n\tconsole.log(songs); //prints array of top 100 songs\r\n\tconsole.log(songs[3]); //prints song with rank: 4\r\n\tconsole.log(songs[0].title); //prints title of top song\r\n\tconsole.log(songs[0].artist); //prints artist of top songs\r\n\tconsole.log(songs[0].rank) //prints rank of top song (1)\r\n\tconsole.log(song[0].cover) //prints URL for Billboard cover image of top song\r\n});\r\n\r\n// date format YYYY-MM-DD\r\n\r\nbillboard('hot-100', '2016-08-27', function(songs, err){\r\n\tif (err) console.log(err);\r\n\tconsole.log(songs); //prints array of top 100 songs for week of August 27, 2016\r\n\tconsole.log(songs[3]); //prints song with rank: 4 for week of August 27, 2016\r\n\tconsole.log(songs[0].title); //prints title of top song for week of August 27, 2016\r\n\tconsole.log(songs[0].artist); //prints artist of top songs for week of August 27, 2016\r\n\tconsole.log(songs[0].rank) //prints rank of top song (1) for week of August 27, 2016\r\n\tconsole.log(song[0].cover) //prints URL for Billboard cover image of top song for week of August 27, 2016\r\n});\r\n\r\n// 'all time' chart\r\n\r\nbillboard('greatest-billboard-200-albums', function(songs, err){\r\n\tif (err) console.log(err);\r\n\tconsole.log(songs); //prints array of top 200 albums\r\n\tconsole.log(songs[3]); //prints album with rank: 4\r\n\tconsole.log(songs[0].title); //prints title of top album\r\n\tconsole.log(songs[0].artist); //prints artist of top songs\r\n\tconsole.log(songs[0].rank) //prints rank of top album (1)\r\n\tconsole.log(song[0].cover) //prints URL for Billboard cover image of top album\r\n});\r\n\r\n// list all available charts\r\n\r\nvar listCharts = require('billboard-top-100').listCharts;\r\n\r\nlistCharts(function(data){\r\n\tconsole.log(data['Overall Popularity']); //prints larray of charts in 'Overall Popularity' category\r\n});\r\n\r\n```\r\n\r\n# chart categories\r\n\r\nGreatest of All Time: 'Greatest of All Time'\r\n\r\nOverall Popularity: 'Overall Popularity'\r\n\r\nBreaking and Entering: 'Breaking and Entering'\r\n\r\nPop: 'Pop'\r\n\r\nCountry: 'Country'\r\n\r\nRock: 'Rock'\r\n\r\nR&B/Hip-Hop: 'R&B/Hip-Hop'\r\n\r\nDance/Electronic: 'Dance/Electronic'\r\n\r\nLatin: 'Latin'\r\n\r\nChristian/Gospel: 'Christian/Gospel'\r\n\r\nHoliday: 'Holiday'\r\n\r\nAdditional Genres: 'Additional Genres'\r\n\r\nInternational: 'International'\r\n\r\nWeb: 'Web'\r\n\r\n# charts\r\n\r\n## Greatest of All Time\r\n\r\nGreatest of All Time Billboard 200 Albums: 'greatest-billboard-200-albums'\r\n\r\nGreatest of All Time Billboard 200 Artists: 'greatest-billboard-200-artists'\r\n\r\nGreatest of All Time Hot 100 Artists: 'greatest-hot-100-artists'\r\n\r\nGreatest of All Time Hot 100 Singles: 'greatest-hot-100-singles'\r\n\r\nGreatest of All Time Adult Pop Songs Artists: 'greatest-adult-pop-artists'\r\n\r\nGreatest of All Time Adult Pop Songs: 'greatest-adult-pop-songs'\r\n\r\nGreatest Of All Time Hot Latin Songs Artists: 'greatest-hot-latin-songs-artists'\r\n\r\nGreatest Of All Time Hot Latin Songs: 'greatest-hot-latin-songs'\r\n\r\nGreatest of All Time Top Country Artists: 'greatest-country-artists'\r\n\r\nGreatest of All Time Top Country Songs: 'greatest-country-songs'\r\n\r\nGreatest of All Time Top Country Albums: 'greatest-country-albums'\r\n\r\n## Overall Popularity\r\n\r\nBillboard 200: 'billboard-200'\r\n\r\nArtist 100: 'artist-100'\r\n\r\nRadio Songs: 'radio-songs'\r\n\r\nBillboard Twitter Real-Time: 'billboard-twitter-realtime'\r\n\r\nThe Hot 100: 'hot-100'\r\n\r\nDigital Song Sales: 'digital-song-sales'\r\n\r\nSongs Of The Summer: 'summer-songs'\r\n\r\nBillboard Twitter Top Tracks: 'twitter-top-tracks'\r\n\r\nBillboard Twitter Emerging Artists: 'twitter-emerging-artists'\r\n\r\nOn-Demand Songs: 'on-demand-songs'\r\n\r\nStreaming Songs: 'streaming-songs'\r\n\r\nTop Album Sales: 'top-album-sales'\r\n\r\nVinyl Albums: 'vinyl-albums'\r\n\r\nDigital Albums: 'digital-albums'\r\n\r\nIndependent Albums: 'independent-albums'\r\n\r\nCatalog Albums: 'catalog-albums'\r\n\r\nSocial 50: 'social-50'\r\n\r\nTastemaker Albums: 'tastemaker-albums'\r\n\r\n## Breaking and Entering\r\n\r\nHeatseekers Albums: 'heatseekers-albums'\r\n\r\n## Pop\r\n\r\nPop Songs: 'pop-songs'\r\n\r\nAdult Pop Songs: 'adult-pop-songs'\r\n\r\nAdult Contemporary: 'adult-contemporary'\r\n\r\n## Country\r\n\r\nCountry Digital Song Sales: 'country-digital-song-sales'\r\n\r\nCountry Streaming Songs: 'country-streaming-songs'\r\n\r\nTop Country Albums: 'country-albums'\r\n\r\nBluegrass Albums: 'bluegrass-albums'\r\n\r\nHot Country Songs: 'country-songs'\r\n\r\n## Rock\r\n\r\nHot Rock Songs: 'rock-songs'\r\n\r\nCountry Airplay: 'country-airplay'\r\n\r\nRock Airplay: 'rock-airplay'\r\n\r\nRock Digital Song Sales: 'rock-digital-song-sales'\r\n\r\nRock Streaming Songs: 'rock-streaming-songs'\r\n\r\nTop Rock Albums: 'rock-albums'\r\n\r\nAlternative Songs: 'alternative-songs'\r\n\r\nAlternative Albums: 'alternative-albums'\r\n\r\nAdult Alternative Songs: 'triple-a'\r\n\r\nMainstream Rock Songs: 'hot-mainstream-rock-tracks'\r\n\r\nHard Rock Albums: 'hard-rock-albums'\r\n\r\nAmericana/Folk Albums: 'americana-folk-albums'\r\n\r\n## R&B/Hip-Hop\r\n\r\nHot R&B/Hip-Hop Songs: 'r-b-hip-hop-songs'\r\n\r\nR&B/Hip-Hop Airplay: 'hot-r-and-b-hip-hop-airplay'\r\n\r\nR&B/Hip-Hop Digital Song Sales: 'r-and-b-hip-hop-digital-song-sales'\r\n\r\nR&B/Hip-Hop Streaming Songs: 'r-and-b-hip-hop-streaming-songs'\r\n\r\nHot R&B Songs: 'r-and-b-songs'\r\n\r\nR&B Streaming Songs: 'r-and-b-streaming-songs'\r\n\r\nHot Rap Songs: 'rap-song'\r\n\r\nRap Streaming Songs: 'rap-streaming-songs'\r\n\r\nTop R&B/Hip-Hop Albums: 'r-b-hip-hop-albums'\r\n\r\nR&B Albums: 'r-and-b-albums'\r\n\r\nRap Albums: 'rap-albums'\r\n\r\nAdult R&B Songs: 'hot-adult-r-and-b-airplay'\r\n\r\nHot Dance/Electronic Songs: 'dance-electronic-songs'\r\n\r\nRhythmic Songs: 'rhythmic-40'\r\n\r\n## Dance/Electronic\r\n\r\nDance/Electronic Digital Song Sales: 'dance-electronic-digital-song-sales'\r\n\r\nDance/Electronic Streaming Songs: 'dance-electronic-streaming-songs'\r\n\r\nDance Club Songs: 'dance-club-play-songs'\r\n\r\nDance/Mix Show Airplay: 'hot-dance-airplay'\r\n\r\nTop Dance/Electronic Albums: 'dance-electronic-albums'\r\n\r\n## Latin\r\n\r\nHot Latin Songs: 'latin-songs'\r\n\r\nLatin Digital Song Sales: 'latin-digital-song-sales'\r\n\r\nLatin Airplay: 'latin-airplay'\r\n\r\nLatin Streaming Songs: 'latin-streaming-songs'\r\n\r\nTropical Songs: 'tropical-songs'\r\n\r\nLatin Pop Songs: 'latin-pop-songs'\r\n\r\nRegional Mexican Songs: 'regional-mexican-songs'\r\n\r\nRegional Mexican Albums: 'regional-mexican-albums'\r\n\r\nLatin Pop Albums: 'latin-pop-albums'\r\n\r\nTop Latin Albums: 'latin-albums'\r\n\r\n## Christian/Gospel\r\n\r\nHot Christian Songs: 'christian-songs'\r\n\r\nChristian Airplay: 'christian-airplay'\r\n\r\nChristian Digital Song Sales: 'christian-digital-song-sales'\r\n\r\nTropical Albums: 'tropical-albums'\r\n\r\nChristian Streaming Songs: 'christian-streaming-songs'\r\n\r\nTop Christian Albums: 'christian-albums'\r\n\r\nHot Gospel Songs: 'gospel-songs'\r\n\r\nGospel Digital Song Sales: 'gospel-digital-song-sales'\r\n\r\nGospel Streaming Songs: 'gospel-streaming-songs'\r\n\r\nTop Gospel Albums: 'gospel-albums'\r\n\r\nGospel Airplay: 'gospel-airplay'\r\n\r\n## Holiday\r\n\r\nHoliday 100: 'hot-holiday-songs'\r\n\r\nHoliday Digital Song Sales: 'holiday-season-digital-song-sales'\r\n\r\nHoliday Albums: 'holiday-albums'\r\n\r\nHoliday Streaming Songs: 'holiday-streaming-songs'\r\n\r\nHoliday Airplay: 'holiday-songs'\r\n\r\n## Additional Genres\r\n\r\nBlues Albums: 'blues-albums'\r\n\r\nClassical Albums: 'classical-albums'\r\n\r\nComedy Albums: 'comedy-albums'\r\n\r\nKid Albums: 'kids-albums'\r\n\r\nJazz Albums: 'jazz-albums'\r\n\r\nSmooth Jazz Songs: 'jazz-songs'\r\n\r\nNew Age Albums: 'new-age-albums'\r\n\r\nReggae Albums: 'reggae-albums'\r\n\r\nSoundtracks: 'soundtracks'\r\n\r\nWorld Albums: 'world-albums'\r\n\r\n## International\r\n\r\nJapan Hot 100: 'japan-hot-100'\r\n\r\nChina V Chart: 'china-v-chart'\r\n\r\nThe Official U.K. Singles Chart: 'united-kingdom-songs'\r\n\r\nThe Official U.K. Albums Chart: 'united-kingdom-albums'\r\n\r\nBillboard Canadian Hot 100: 'canadian-hot-100'\r\n\r\nCanadian Digital Song Sales: 'hot-canada-digital-song-sales'\r\n\r\nBillboard Canadian Albums: 'canadian-albums'\r\n\r\nGermany Songs: 'germany-songs'\r\n\r\nGermany Albums: 'german-albums'\r\n\r\nFrance Songs: 'france-songs'\r\n\r\n## Web\r\n\r\nSpotify Velocity: 'spotify-velocity'\r\n\r\nSpotify Rewind: 'spotify-rewind'\r\n\r\nSpotify Viral 50: 'spotify-viral-50'\r\n\r\nYouTube: 'youtube'\r\n\r\nLyricFind Global: 'lyricfind-global'\r\n\r\nLyricFind U.S.: 'lyricfind-us'\r\n\r\nNext Big Sound: 'next-big-sound-25'\r\n\r\n# api\r\n\r\n### listCharts(callback)\r\n\r\nType: `function`\r\n\r\nReturns object containing arrays of charts separated by category\r\n\r\n### getChart(chart[, date], callback)\r\n\r\nType: `function`\r\n\r\n```chart``` string\r\n\r\n```date``` string ('all time' charts will not accept a date)\r\n\r\n```callback``` function\r\n\r\nReturns array of songs/albums/artists in chart. \r\n\r\n### songs\r\n\r\nType: `array`\r\n\r\nSong objects.\r\n\r\n### songObject.rank\r\n\r\nType: `number`\r\n\r\nRank of song on charts.\r\n\r\n### songObject.title\r\n\r\nType: `string`\r\n\r\nTitle of song.\r\n\r\n### songObject.artist\r\n\r\nType: `string`\r\n\r\nName of artist of song.\r\n\r\n### songObject.cover\r\n\r\nType: `string`\r\n\r\nCover image URL of song.\r\n\r\n### songObject.position\r\n\r\nType: `object`\r\n\r\n```Last Week``` string (position of song on chart last week)\r\n\r\n```Peak Position``` string (peak position of song on chart)\r\n\r\n```Wks on Chart``` string (number of weeks song has been on chart)\r\n\r\nPosition information of song.\r\n\r\n\r\n# license\r\n\r\nMIT Â© [Rishi Masand](https://github.com/darthbatman)\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/darthbatman/billboard-top-100.git"
  },
  "scripts": {
    "test": "./node_modules/jshint/bin/jshint ./tests/test.js"
  },
  "version": "2.0.7"
}
